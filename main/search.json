[{"path":[]},{"path":"https://insightsengineering.github.io/tern.mmrm/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla‚Äôs code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Contribution Guidelines","text":"üôè Thank taking time contribute! input deeply valued, whether issue, pull request, even feedback, regardless size, content scope.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"Contribution Guidelines","text":"üë∂ Getting started üìî Code Conduct üóÉ License üìú Issues üö© Pull requests üíª Coding guidelines üèÜ Recognition model ‚ùì Questions","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Contribution Guidelines","text":"Please refer project documentation brief introduction. Please also see articles within project documentation additional information.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contribution Guidelines","text":"Code Conduct governs project. Participants contributors expected follow rules outlined therein.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CONTRIBUTING.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Contribution Guidelines","text":"contributions covered project‚Äôs license.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contribution Guidelines","text":"use GitHub track issues, feature requests, bugs. submitting new issue, please check issue already reported. issue already exists, please upvote existing issue üëç. new feature requests, please elaborate context benefit feature users, developers, relevant personas.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/tern.mmrm/CONTRIBUTING.html","id":"github-flow","dir":"","previous_headings":"Pull requests","what":"GitHub Flow","title":"Contribution Guidelines","text":"repository uses GitHub Flow model collaboration. submit pull request: Create branch Please see branch naming convention . don‚Äôt write access repository, please fork . Make changes Make sure code passes checks imposed GitHub Actions well documented well tested unit tests sufficiently covering changes introduced Create pull request (PR) pull request description, please link relevant issue (), provide detailed description change, include assumptions. Address review comments, Post approval Merge PR write access. Otherwise, reviewer merge PR behalf. Pat back Congratulations! üéâ now official contributor project! grateful contribution.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CONTRIBUTING.html","id":"branch-naming-convention","dir":"","previous_headings":"Pull requests","what":"Branch naming convention","title":"Contribution Guidelines","text":"Suppose changes related current issue current project; please name branch follows: <issue_id>_<short_description>. Please use underscore (_) delimiter word separation. example, 420_fix_ui_bug suitable branch name change resolving UI-related bug reported issue number 420 current project. change affects multiple repositories, please name branches follows: <issue_id>_<issue_repo>_<short description>. example, 69_awesomeproject_fix_spelling_error reference issue 69 reported project awesomeproject aims resolve one spelling errors multiple (likely related) repositories.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CONTRIBUTING.html","id":"monorepo-and-stageddependencies","dir":"","previous_headings":"Pull requests","what":"monorepo and staged.dependencies","title":"Contribution Guidelines","text":"Sometimes might need change upstream dependent package(s) able submit meaningful change. using staged.dependencies functionality simulate monorepo behavior. dependency configuration already specified project‚Äôs staged_dependencies.yaml file. need name feature branches appropriately. exception branch naming convention described . Please refer staged.dependencies package documentation details.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CONTRIBUTING.html","id":"coding-guidelines","dir":"","previous_headings":"","what":"Coding guidelines","title":"Contribution Guidelines","text":"repository follows unified processes standards adopted maintainers ensure software development carried consistently within teams cohesively across repositories.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CONTRIBUTING.html","id":"style-guide","dir":"","previous_headings":"Coding guidelines","what":"Style guide","title":"Contribution Guidelines","text":"repository follows standard tidyverse style guide uses lintr lint checks. Customized lint configurations available repository‚Äôs .lintr file.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CONTRIBUTING.html","id":"dependency-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency management","title":"Contribution Guidelines","text":"Lightweight right weight. repository follows tinyverse recommedations limiting dependencies minimum.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CONTRIBUTING.html","id":"dependency-version-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency version management","title":"Contribution Guidelines","text":"code compatible (!) historical versions given dependenct package, required specify minimal version DESCRIPTION file. particular: development version requires (imports) development version another package - required put abc (>= 1.2.3.9000).","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/tern.mmrm/CONTRIBUTING.html","id":"r--package-versions","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"R & package versions","title":"Contribution Guidelines","text":"continuously test packages newest R version along recent dependencies CRAN BioConductor. recommend working environment also set way. can find details R version packages used R CMD check GitHub Action execution log - step prints R sessionInfo(). discover bugs older R versions older set dependencies, please create relevant bug reports.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CONTRIBUTING.html","id":"pre-commit","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"pre-commit","title":"Contribution Guidelines","text":"highly recommend use pre-commit tool combined R hooks pre-commit execute checks committing pushing changes. Pre-commit hooks already available repository‚Äôs .pre-commit-config.yaml file.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CONTRIBUTING.html","id":"recognition-model","dir":"","previous_headings":"","what":"Recognition model","title":"Contribution Guidelines","text":"mentioned previously, contributions deeply valued appreciated. contribution data available part repository insights, recognize significant contribution hence add contributor package authors list, following rules enforced: Minimum 5% lines code authored* (determined git blame query) top 5 contributors terms number commits lines added lines removed* *Excluding auto-generated code, including limited roxygen comments renv.lock files. package maintainer also reserves right adjust criteria recognize contributions.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/CONTRIBUTING.html","id":"questions","dir":"","previous_headings":"","what":"Questions","title":"Contribution Guidelines","text":"questions regarding contribution guidelines, please contact package/repository maintainer.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/tern.mmrm/SECURITY.html","id":"reporting-security-issues","dir":"","previous_headings":"","what":"Reporting Security Issues","title":"Security Policy","text":"believe found security vulnerability repositories organization, please report us coordinated disclosure. Please report security vulnerabilities public GitHub issues, discussions, pull requests. Instead, please send email vulnerability.management[@]roche.com. Please include much information listed can help us better understand resolve issue: type issue (e.g., buffer overflow, SQL injection, cross-site scripting) Full paths source file(s) related manifestation issue location affected source code (tag/branch/commit direct URL) special configuration required reproduce issue Step--step instructions reproduce issue Proof--concept exploit code (possible) Impact issue, including attacker might exploit issue information help us triage report quickly.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/SECURITY.html","id":"data-security-standards-dss","dir":"","previous_headings":"","what":"Data Security Standards (DSS)","title":"Security Policy","text":"Please make sure reporting issues form bug, feature, pull request, sensitive information PII, PHI, PCI completely removed text attachments, including pictures videos.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/articles/introduction.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to tern.mmrm","text":"Mixed effect Models Repeated Measures (MMRM) often used primary analysis continuous longitudinal endpoints clinical trials. setting, MMRM specific linear mixed effects model includes fixed effects variables: treatment arm, categorical visit, treatment visit interaction, covariates adjustment (e.g.¬†age, gender). covariance structure residuals can take different forms. Often, unstructured (.e.¬†saturated parametrization) covariance matrix assumed can represented random effects mixed model. implemented proprietary software SAS, whose PROC MIXED routine generally considered gold standard mixed models. However, allow use interactive web applications explore clinical study data flexible way. Therefore, wanted implement MMRM R way easily embedded shiny application. See teal.modules.clinical package details using code inside shiny application.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/articles/introduction.html","id":"descriptive-statistics","dir":"Articles","previous_headings":"","what":"Descriptive Statistics","title":"Introduction to tern.mmrm","text":"Descriptive statistics relevant analysis population (e.g.¬†patients least one post baseline visit) can obtained functions described Section @ref(baseline-tables).","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/tern.mmrm/articles/introduction.html","id":"statistical-model","dir":"Articles","previous_headings":"Methodology","what":"Statistical model","title":"Introduction to tern.mmrm","text":"linear mixed model (LMM) framework, outcome vector \\({\\bf Y}\\) modeled \\[\\bf Y = X \\boldsymbol \\beta + Z b + {\\boldsymbol \\varepsilon}\\] \\(\\bf X\\) matrix fixed effects, \\(\\bf Z\\) matrix random effects, \\(\\mathbf b \\sim N(0, \\mathbf D(\\boldsymbol \\theta))\\), \\({\\boldsymbol \\varepsilon} \\sim N(0, \\mathbf R(\\boldsymbol \\theta))\\). Letting \\(\\mathbf V = \\mathbf Z \\mathbf D \\mathbf Z^T + \\mathbf R\\), marginal conditional models given \\(\\mathbf Y \\sim N(\\bf X \\boldsymbol \\beta, V)\\) \\(\\mathbf Y | \\mathbf b \\sim N(\\bf X \\boldsymbol \\beta + Z b, R)\\), respectively. MMRM special case LMM \\(\\bf Y\\) collection measurements made set individuals time, .e.¬†\\(\\mathbf Y = ({\\bf Y}_1^T, {\\bf Y}_2^T, ...)^T\\) \\(\\mathbf Y_i = \\mathbf X_i \\boldsymbol \\beta + \\mathbf Z_i \\mathbf b_i + {\\boldsymbol \\varepsilon}_i\\). context clinical trials, individuals patients identified unique subject id, measurements treatment response, fixed effects include treatment arm, categorical visit, treatment visit interaction, potentially covariates (e.g.¬†age, gender).","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/articles/introduction.html","id":"estimation","dir":"Articles","previous_headings":"Methodology","what":"Estimation","title":"Introduction to tern.mmrm","text":"parameters \\(\\boldsymbol \\beta\\), \\(\\bf b\\), \\(\\boldsymbol \\theta\\) can estimated maximizing penalized restricted maximum likelihoods. average treatment response visit often particular interest. However, simply comparing predicted marginal responses \\(E(Y_{ij})\\) averaged across treatment x visit groups account potential imbalance covariates. (Imbalance may occur even randomized trials due patients dying dropping time.) fair comparison, least-squares (LS) mean: establishes reference grid cell represents unique combination factor (covariate) levels, calculates predicted marginal response cell, takes weighted average predicted marginal responses. following simple example illustrates concept LS means. Suppose longitudinal clinical trial three factors considered: treatment (B), visit (1, 2, ‚Ä¶), gender (M F). marginal predicted response (sample size) reference cell follows. average predicted responses arms B Visit 1 \\((100 \\times 20 + 50 \\times 30) / 50 = 70\\) \\((90 \\times 35 + 40 \\times 15) / 50 = 75\\), respectively. overall mean higher arm B arm even though mean lower within gender category. seeming contradiction caused imbalance data. LS mean calculates weighted average across cells treatment visit. example, equivalent taking weighted average column. One may assign equal weights cell, .e.¬†\\(0.5 \\times 100 + 0.5 \\times 50 = 75\\) \\(0.5 \\times 90 + 0.5 \\times 40 = 65\\). Alternatively, one may assign weights proportional observed frequencies factor combinations, .e.¬†\\(0.55 \\times 100 + 0.45 \\times 50 = 77.5\\) \\(0.55 \\times 90 + 0.45 \\times 40 = 67.5\\). cases, LS mean response lower arm B arm . LS means calculated tern.mmrm via R package emmeans. Users option weigh marginal predicted responses either equal weights proportional weights. Note proportional weights, weights calculated visit taking account observed frequencies factor combinations time. Therefore, even though covariate imbalance may vary time, LS mean provides adjusted analysis treatment response visits.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/articles/introduction.html","id":"inference","dir":"Articles","previous_headings":"Methodology","what":"Inference","title":"Introduction to tern.mmrm","text":"Performing inference estimated parameters (e.g.¬†calculating p-values) less straightforward MMRM. exact null distributions parameter effects unknown. SAS addresses issue utilizing Satterthwaite‚Äôs method approximate adjusted degrees freedom \\(F\\) \\(t\\) tests. lme4 lmerTest also implemented Satterthwaite‚Äôs method. Unfortunately found robust convergence behavior. Compared lme4, R package nlme can consider flexible covariance structures. However, chosen use package provide exact Satterthwaite adjusted degrees freedom available approximate degrees freedom can differ substantially. Therefore built new package mmrm. mmrm, tern.mmrm able replicate outputs SAS.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/articles/introduction.html","id":"covariance-structure","dir":"Articles","previous_headings":"Methodology","what":"Covariance structure","title":"Introduction to tern.mmrm","text":"Users tern.mmrm currently following options covariance structure \\(\\mathbf V_i\\): Unstructured: \\[V_{ij} = \\theta_{ij}\\] Homogeneous AR(1): \\[(\\mathbf V_i)_{jk} = \\sigma^2 \\rho^{|j-k|}\\] Heterogeneous AR(1): \\[(\\mathbf V_i)_{jk} = \\sigma_j \\sigma_k \\rho^{|j-k|}\\] Heterogeneous Toeplitz: \\[(\\mathbf V_i)_{jk}=\\sigma_j \\sigma_k \\theta_{|j-k|}\\] Heterogeneous Ante-Dependence: \\[(\\mathbf V_i)_{jk} = \\sigma_j \\sigma_k \\prod_{=j}^{k}\\rho_i\\]","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/articles/introduction.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model fitting","title":"Introduction to tern.mmrm","text":"section, illustrate fit MMRM tern.mmrm fit MMRM manually R. compare SAS show results match.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/articles/introduction.html","id":"setup","dir":"Articles","previous_headings":"Model fitting","what":"Setup","title":"Introduction to tern.mmrm","text":"example dataset consists several variables: subject ID (USUBJID), visit number (AVISIT), treatment (ARMCD = TRT PBO), 3-category race, sex, FEV1 baseline (%), FEV1 study visits (%). FEV1 (forced expired volume one second) measure quickly lungs can emptied. Low levels FEV1 may indicate chronic obstructive pulmonary disease (COPD). scientific question hand whether treatment leads increase FEV1 time adjusting baseline covariates.","code":"library(tern.mmrm) #> Loading required package: tern #> Loading required package: rtables #> Loading required package: formatters #> Loading required package: magrittr #>  #> Attaching package: 'rtables' #> The following object is masked from 'package:utils': #>  #>     str #> Registered S3 method overwritten by 'tern': #>   method   from  #>   tidy.glm broom data(mmrm_test_data) head(mmrm_test_data) #> # A tibble: 6 √ó 7 #>   USUBJID AVISIT ARMCD RACE                      SEX    FEV1_BL  FEV1 #>   <fct>   <fct>  <fct> <fct>                     <fct>    <dbl> <dbl> #> 1 PT1     VIS1   TRT   Black or African American Female    25.3  NA   #> 2 PT1     VIS2   TRT   Black or African American Female    25.3  40.0 #> 3 PT1     VIS3   TRT   Black or African American Female    25.3  NA   #> 4 PT1     VIS4   TRT   Black or African American Female    25.3  20.5 #> 5 PT2     VIS1   PBO   Asian                     Male      45.0  NA   #> 6 PT2     VIS2   PBO   Asian                     Male      45.0  31.5"},{"path":"https://insightsengineering.github.io/tern.mmrm/articles/introduction.html","id":"model-fitting-via-tern-mmrm","dir":"Articles","previous_headings":"Model fitting","what":"Model fitting via tern.mmrm","title":"Introduction to tern.mmrm","text":"Fitting MMRM easy tern.mmrm. default, model fitting function fit_mmrm assumes unstructured correlation proportional weights calculating LS means. resulting object consists among things estimated random fixed effects (fit), estimated LS means particular treatment particular visit (lsmeans), difference LS means particular visit (lsmeans$contrasts). Based output, evidence supports treatment leading increase FEV1 placebo study visits. correlation structures weighting schemes can considered.","code":"mmrm_results <- fit_mmrm(   vars = list(     response = \"FEV1\",     covariates = c(\"RACE\", \"SEX\", \"FEV1_BL\"),     id = \"USUBJID\",     arm = \"ARMCD\",     visit = \"AVISIT\"   ),   data = mmrm_test_data,   cor_struct = \"unstructured\",   weights_emmeans = \"proportional\" ) mmrm_results$lsmeans$contrasts #>   ARMCD AVISIT estimate        se       df lower_cl upper_cl   t_stat #> 1   TRT   VIS1 3.983290 1.0454036 142.3210 1.916765 6.049815 3.810289 #> 2   TRT   VIS2 3.930758 0.8135131 142.2576 2.322622 5.538895 4.831831 #> 3   TRT   VIS3 2.983718 0.6656674 129.6093 1.666737 4.300699 4.482295 #> 4   TRT   VIS4 4.404001 1.6604869 132.8789 1.119595 7.688407 2.652235 #>        p_value relative_reduc #> 1 2.058960e-04    -0.12101832 #> 2 3.460313e-06    -0.10424997 #> 3 1.606280e-05    -0.06893864 #> 4 8.969722e-03    -0.09154581"},{"path":"https://insightsengineering.github.io/tern.mmrm/articles/introduction.html","id":"model-fitting-manually-in-r","dir":"Articles","previous_headings":"Model fitting","what":"Model fitting manually in R","title":"Introduction to tern.mmrm","text":"One can reproduce results manually R. example, fit unstructured model: Compared manual implementation, tern.mmrm users can avoid specifying formula manually. Note also tern.mmrm default optimizer fact one shown . default fails converge, automatically attempts use multiple optimizers, delivering results consensus.","code":"library(mmrm) library(emmeans)  fit <- lmer(   formula = FEV1 ~ RACE + SEX + FEV1_BL + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = mmrm_test_data ) emmeans::emmeans(fit, pairwise ~ ARMCD | AVISIT, weights = \"proportional\")"},{"path":"https://insightsengineering.github.io/tern.mmrm/articles/introduction.html","id":"model-fitting-via-sas","dir":"Articles","previous_headings":"Model fitting","what":"Model fitting via SAS","title":"Introduction to tern.mmrm","text":"","code":"proc import datafile=\"location_of_data.csv\"      out=dat      dbms=csv      replace;      getnames=yes; run;  proc mixed data= dat;        class ARMCD(ref=\"PBO\") AVISIT(ref=\"VIS1\") USUBJID SEX(ref=\"Male\") RACE(ref=\"Asian\");        Model FEV1 = ARMCD  RACE  SEX  FEV1_BL  AVISIT  ARMCD*AVISIT    / solution ddfm=satterthwaite;        repeated AVISIT / type=UN subject=USUBJID;        lsmeans ARMCD*AVISIT/pdiff obsmargins cl; run;"},{"path":[]},{"path":"https://insightsengineering.github.io/tern.mmrm/articles/introduction.html","id":"model-fitting-1","dir":"Articles","previous_headings":"Diagnostics","what":"Model fitting","title":"Introduction to tern.mmrm","text":"key part analysis data model selection, often desire select parsimonious model adequately fits data. provide four information criteria found SAS PROC MIXED. criterion specifically calculated follows: REML criterion: \\(-2 l\\) \\(l\\) REML log-likelihood. criterion penalty complexity, generally decreases model becomes complex. AIC: \\(-2l + 2d\\) \\(d\\) number covariance parameters. AICc: \\(-2l + 2dn^*/(n^*-d-1)\\) \\(n^*\\) number observations minus number fixed effects, \\(d + 2\\) smaller . AICc finite-sample corrected version AIC. BIC: \\(-2l + d \\log n\\) \\(n\\) number subjects opposed number observations. objective approach model selection minimize AIC, AICc, BIC. details information criteria (including references), see SAS Documentation.","code":"mmrm_results$diagnostics"},{"path":"https://insightsengineering.github.io/tern.mmrm/articles/introduction.html","id":"residual-analysis","dir":"Articles","previous_headings":"Diagnostics","what":"Residual analysis","title":"Introduction to tern.mmrm","text":"Another key part analysis data verifying model assumptions. g_mmrm_diagnostic(fit, type = ...) provides several handy residual plots, diagnostic different aspect MMRMs. Argument: type = \"fit-residual\" Diagnostic : homoskedasticity marginal residuals Argument: type = q-q-residual Diagnostic : normality marginal residuals","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/articles/introduction.html","id":"outlook","dir":"Articles","previous_headings":"","what":"Outlook","title":"Introduction to tern.mmrm","text":"actively looking expand capabilities tern.mmrm. particular working foundational package mmrm include features, treatment group specific covariance matrices additional covariance structures.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Saban√©s Bov√©. Author, maintainer. Godwin Yung. Author. Francois Collin. Author. Julia Dedic. Author. Jana Stoilova. Author. Joe Zhu. Author. F. Hoffmann-La Roche AG. Copyright holder, funder.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Saban√©s Bov√© D, Yung G, Collin F, Dedic J, Stoilova J, Zhu J (2024). tern.mmrm: Tables Graphs Mixed Models Repeated Measures (MMRM). R package version 0.3.0.9004,  https://insightsengineering.github.io/tern.mmrm/, https://github.com/insightsengineering/tern.mmrm.","code":"@Manual{,   title = {tern.mmrm: Tables and Graphs for Mixed Models for Repeated Measures (MMRM)},   author = {Daniel {Saban√©s Bov√©} and Godwin Yung and Francois Collin and Julia Dedic and Jana Stoilova and Joe Zhu},   year = {2024},   note = {R package version 0.3.0.9004,  https://insightsengineering.github.io/tern.mmrm/},   url = {https://github.com/insightsengineering/tern.mmrm}, }"},{"path":[]},{"path":"https://insightsengineering.github.io/tern.mmrm/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Tables and Graphs for Mixed Models for Repeated Measures (MMRM)","text":"tern.mmrm provides interface mixed model repeated measures (MMRM) within tern framework produce commonly used tables (using rtables) graphs. builds R-package mmrm actual MMRM calculations.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/index.html","id":"when-to-use-this-package","dir":"","previous_headings":"","what":"When to use this package","title":"Tables and Graphs for Mixed Models for Repeated Measures (MMRM)","text":"like use tern framework tabulation graphs, package ideal MMRM fits. However use another reporting framework better directly use mmrm perform tabulation plots differently.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/index.html","id":"main-features","dir":"","previous_headings":"","what":"Main Features","title":"Tables and Graphs for Mixed Models for Repeated Measures (MMRM)","text":"Fitting MMRM models continuous longitudinal data collected several time points (called visits) optionally treatment arms. Tabulation plots least square means per visit treatment arm. Tabulation model diagnostics (e.g.¬†BIC). Diagnostic graphs (e.g.¬†Q-Q plot residuals). Tabulation plots covariance matrix estimate. Subgroup specific refitting MMRM model resulting forest plot.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/tern.mmrm/index.html","id":"github","dir":"","previous_headings":"Installation","what":"GitHub","title":"Tables and Graphs for Mixed Models for Repeated Measures (MMRM)","text":"recommended create use GitHub PAT install latest version package. PAT, run following:","code":"Sys.setenv(GITHUB_PAT = \"your_access_token_here\") if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"insightsengineering/tern.mmrm@*release\")"},{"path":"https://insightsengineering.github.io/tern.mmrm/index.html","id":"nest-distribution","dir":"","previous_headings":"Installation","what":"NEST distribution","title":"Tables and Graphs for Mixed Models for Repeated Measures (MMRM)","text":"stable release NEST packages also available .","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Tables and Graphs for Mixed Models for Repeated Measures (MMRM)","text":"can get started trying example: specifies MMRM FEV1 outcome RACE SEX covariates subjects identified USUBJID treatment arm ARMCD observed time points identified AVISIT mmrm_test_data data set. unstructured covariance matrix assumed. Note restricted maximum likelihood (REML) can used. least square means assume equal weights factor combinations, addition single visit specific results average across visits VIS1 VIS2 computed.","code":"library(tern.mmrm) fit <- fit_mmrm(   vars = list(     response = \"FEV1\",     covariates = c(\"RACE\", \"SEX\"),     id = \"USUBJID\",     arm = \"ARMCD\",     visit = \"AVISIT\"   ),   data = mmrm_test_data,   cor_struct = \"unstructured\",   weights_emmeans = \"equal\",   averages_emmeans = list(     \"VIS1+2\" = c(\"VIS1\", \"VIS2\")   ) )"},{"path":"https://insightsengineering.github.io/tern.mmrm/index.html","id":"details","dir":"","previous_headings":"","what":"Details","title":"Tables and Graphs for Mixed Models for Repeated Measures (MMRM)","text":"detailed introduction features package, look introduction vignette:","code":"vignette(\"introduction\")"},{"path":[]},{"path":[]},{"path":[]},{"path":"https://insightsengineering.github.io/tern.mmrm/pull_request_template.html","id":null,"dir":"","previous_headings":"","what":"Pull Request","title":"Pull Request","text":"Fixes #nnn","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/a_mmrm_subgroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Formatted Analysis Function for MMRM Subgroups ‚Äî a_mmrm_subgroups","title":"Formatted Analysis Function for MMRM Subgroups ‚Äî a_mmrm_subgroups","text":"Formatted Analysis Function MMRM Subgroups","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/a_mmrm_subgroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formatted Analysis Function for MMRM Subgroups ‚Äî a_mmrm_subgroups","text":"","code":"a_mmrm_subgroups(.formats)"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/a_mmrm_subgroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formatted Analysis Function for MMRM Subgroups ‚Äî a_mmrm_subgroups","text":".formats (named list) containing formats statistics use MMRM subgroups table.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/a_mmrm_subgroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Formatted Analysis Function for MMRM Subgroups ‚Äî a_mmrm_subgroups","text":"List formatted analysis functions used tabulate_mmrm_subgroups().","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/build_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Building Model Formula ‚Äî build_formula","title":"Building Model Formula ‚Äî build_formula","text":"builds model formula used inside fit_mmrm() provided mmrm::mmrm() internally. can instructive look resulting formula directly sometimes.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/build_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Building Model Formula ‚Äî build_formula","text":"","code":"build_formula(   vars,   cor_struct = c(\"unstructured\", \"toeplitz\", \"heterogeneous toeplitz\", \"ante-dependence\",     \"heterogeneous ante-dependence\", \"auto-regressive\", \"heterogeneous auto-regressive\",     \"compound symmetry\", \"heterogeneous compound symmetry\") )"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/build_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Building Model Formula ‚Äî build_formula","text":"vars (list) variables use model. cor_struct (string) specify covariance structure use.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/build_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Building Model Formula ‚Äî build_formula","text":"Formula use mmrm::mmrm().","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/build_formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Building Model Formula ‚Äî build_formula","text":"","code":"vars <- list(   response = \"AVAL\", covariates = c(\"RACE\", \"SEX\"),   id = \"USUBJID\", arm = \"ARMCD\", visit = \"AVISIT\" ) build_formula(vars, \"auto-regressive\") #> AVAL ~ RACE + SEX + ARMCD * AVISIT + ar1(AVISIT | USUBJID) #> <environment: 0x563d3b2f5740> build_formula(vars) #> AVAL ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID) #> <environment: 0x563d3b369520>"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/extract_mmrm_subgroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Extraction of MMRM Subgroup Results based on Population Model Definition ‚Äî extract_mmrm_subgroups","title":"Extraction of MMRM Subgroup Results based on Population Model Definition ‚Äî extract_mmrm_subgroups","text":"prepares LS mean estimates contrasts specific visit treatment arm relative reference arm, along list subgroup variables corresponding (grouped) factor levels.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/extract_mmrm_subgroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extraction of MMRM Subgroup Results based on Population Model Definition ‚Äî extract_mmrm_subgroups","text":"","code":"extract_mmrm_subgroups(   fit,   visit,   subgroups = NULL,   groups_lists = list(),   treatment_arm = fit$treatment_levels[1L],   label_all = \"All Patients\" )"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/extract_mmrm_subgroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extraction of MMRM Subgroup Results based on Population Model Definition ‚Äî extract_mmrm_subgroups","text":"fit (tern_mmrm) model fit total population. visit (string) single visit name averages visits (referring averages specified creating fit). subgroups (character NULL) names subgroup variables use forest plot, need factors. groups_lists (named list list) optionally contains subgroups variable list, specifies groups factor levels, see details. treatment_arm (string) single treatment arm compare reference arm. label_all (string) label total population analysis.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/extract_mmrm_subgroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extraction of MMRM Subgroup Results based on Population Model Definition ‚Äî extract_mmrm_subgroups","text":"list two elements: estimates: data.frame columns arm, n, lsmean, subgroup, var, var_label, row_type, containing LS means results overall population specified subgroups. contrasts: data.frame columns n_tot, diff, lcl, ucl, pval, subgroup, var, var_label, row_type. Note half number rows estimates.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/extract_mmrm_subgroups.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extraction of MMRM Subgroup Results based on Population Model Definition ‚Äî extract_mmrm_subgroups","text":"groups_lists argument handy want subgroups identical original levels factor variable. might case want merge levels single subgroup, define overlapping subgroups omit levels completely. insert element groups_lists name subgroups variable containing named list subgroup definitions. See example .","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/extract_mmrm_subgroups.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Extraction of MMRM Subgroup Results based on Population Model Definition ‚Äî extract_mmrm_subgroups","text":"original model vars include covariates used subgroups dropped covariates corresponding model fitted.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/extract_mmrm_subgroups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extraction of MMRM Subgroup Results based on Population Model Definition ‚Äî extract_mmrm_subgroups","text":"","code":"mmrm_results <- fit_mmrm(   vars = list(     response = \"FEV1\",     covariates = \"RACE\",     id = \"USUBJID\",     arm = \"ARMCD\",     visit = \"AVISIT\"   ),   data = mmrm_test_data,   cor_struct = \"compound symmetry\",   weights_emmeans = \"equal\",   averages_emmeans = list(     \"VIS1+2\" = c(\"VIS1\", \"VIS2\")   ) )  extract_mmrm_subgroups(   fit = mmrm_results,   visit = \"VIS3\",   subgroups = c(\"RACE\", \"SEX\"),   groups_lists = list(     RACE = list(       A = c(\"Asian\", \"White\"),       B = c(\"Black or African American\", \"White\")     )   ) ) #> $estimates #>    arm  n   lsmean     subgroup  var    var_label row_type #> 1  PBO 71 43.65406 All Patients  ALL All Patients  content #> 2  TRT 58 46.49354 All Patients  ALL All Patients  content #> 3  PBO 42 43.21069            A RACE         RACE analysis #> 4  TRT 45 46.71975            A RACE         RACE analysis #> 5  PBO 44 43.91593            B RACE         RACE analysis #> 6  TRT 34 48.26624            B RACE         RACE analysis #> 7  PBO 35 42.96082         Male  SEX          SEX analysis #> 8  TRT 23 46.69734         Male  SEX          SEX analysis #> 9  PBO 36 44.20545       Female  SEX          SEX analysis #> 10 TRT 35 46.37633       Female  SEX          SEX analysis #>  #> $contrasts #>   n_tot     diff        lcl      ucl        pval conf_level     subgroup  var #> 1   129 2.839483  0.5272786 5.151687 0.016186861       0.95 All Patients  ALL #> 2    87 3.509059  0.5556453 6.462472 0.020028651       0.95            A RACE #> 3    78 4.350311  1.2151941 7.485427 0.006681578       0.95            B RACE #> 4    58 3.736513  0.2280817 7.244945 0.036955568       0.95         Male  SEX #> 5    71 2.170876 -0.9742635 5.316015 0.175312081       0.95       Female  SEX #>      var_label row_type #> 1 All Patients  content #> 2         RACE analysis #> 3         RACE analysis #> 4          SEX analysis #> 5          SEX analysis #>"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/fit_mmrm.html","id":null,"dir":"Reference","previous_headings":"","what":"MMRM Analysis ‚Äî fit_mmrm","title":"MMRM Analysis ‚Äî fit_mmrm","text":"MMRM analysis. Multiple functions can called result produce tables graphs.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/fit_mmrm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MMRM Analysis ‚Äî fit_mmrm","text":"","code":"fit_mmrm(   vars = list(response = \"AVAL\", covariates = c(), id = \"USUBJID\", arm = \"ARM\", visit =     \"AVISIT\"),   data,   conf_level = 0.95,   cor_struct = \"unstructured\",   weights_emmeans = \"proportional\",   averages_emmeans = list(),   parallel = FALSE,   ... )"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/fit_mmrm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MMRM Analysis ‚Äî fit_mmrm","text":"vars (named list string character) specifying variables MMRM. following elements need included character vectors match corresponding columns data: response: response variable. covariates: additional covariate terms (might also include interactions). id: subject ID variable. arm: treatment group variable (factor). visit: visit variable (factor). weights: optional weights variable (NULL omitted weights used). Note main effects interaction arm visit default included model. data (data.frame) variables specified vars. Records missing values independent variables excluded. conf_level (proportion) confidence level interval. cor_struct (string) specifying covariance structure, defaults \"unstructured\". See details. weights_emmeans (string) argument emmeans::emmeans(), \"proportional\" default. averages_emmeans (list) optional named list visit levels averaged reported along side single visits. parallel (flag) controls whether optimizer search can use available free cores machine (default). ... additional arguments mmrm::mmrm(), particular reml options listed mmrm::mmrm_control().","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/fit_mmrm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MMRM Analysis ‚Äî fit_mmrm","text":"tern_mmrm object list MMRM results: fit: mmrm object fitted data. Note via mmrm::component(fit, \"optimizer\") finally used optimization algorithm can obtained, can useful refitting model later . cov_estimate: matrix covariance matrix estimate. diagnostics: list model diagnostic statistics (REML criterion, AIC, corrected AIC, BIC). lsmeans: list data frames estimates contrasts. attributes averages weights save settings used (averages_emmeans weights_emmeans). vars: variable list. labels: Corresponding list variable labels extracted data. cor_struct: input. parallel: input. ref_level: reference level arm variable, always first level. treatment_levels: treatment levels arm variable. conf_level: confidence level used construct lsmeans confidence intervals. additional: List additional inputs passed via ...","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/fit_mmrm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MMRM Analysis ‚Äî fit_mmrm","text":"Multiple different degree freedom adjustments available via method argument mmrm::mmrm(). addition, covariance matrix adjustments available via vcov. Please see mmrm::mmrm_control() details additional useful options. covariance structure (cor_struct), user can choose among following options. unstructured: Unstructured covariance matrix. flexible choice default. T visits, T * (T+1) / 2 variance parameters used. toeplitz: Homogeneous Toeplitz covariance matrix, uses T variance parameters. heterogeneous toeplitz: Heterogeneous Toeplitz covariance matrix, uses 2 * T - 1 variance parameters. ante-dependence: Homogeneous Ante-Dependence covariance matrix, uses T variance parameters. heterogeneous ante-dependence: Heterogeneous Ante-Dependence covariance matrix, uses 2 * T - 1 variance parameters. auto-regressive: Homogeneous Auto-Regressive (order 1) covariance matrix, uses 2 variance parameters. heterogeneous auto-regressive: Heterogeneous Auto-Regressive (order 1) covariance matrix, uses T + 1 variance parameters. compound symmetry: Homogeneous Compound Symmetry covariance matrix, uses 2 variance parameters. heterogeneous compound symmetry: Heterogeneous Compound Symmetry covariance matrix, uses T + 1 variance parameters.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/fit_mmrm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MMRM Analysis ‚Äî fit_mmrm","text":"","code":"library(dplyr) #>  #> Attaching package: ‚Äòdplyr‚Äô #> The following object is masked from ‚Äòpackage:testthat‚Äô: #>  #>     matches #> The following objects are masked from ‚Äòpackage:stats‚Äô: #>  #>     filter, lag #> The following objects are masked from ‚Äòpackage:base‚Äô: #>  #>     intersect, setdiff, setequal, union library(rtables)  mmrm_results <- fit_mmrm(   vars = list(     response = \"FEV1\",     covariates = c(\"RACE\", \"SEX\"),     id = \"USUBJID\",     arm = \"ARMCD\",     visit = \"AVISIT\"   ),   data = mmrm_test_data,   cor_struct = \"unstructured\",   weights_emmeans = \"equal\",   averages_emmeans = list(     \"VIS1+2\" = c(\"VIS1\", \"VIS2\")   ) )"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/g_covariance.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of Covariance Matrix ‚Äî g_covariance","title":"Visualization of Covariance Matrix ‚Äî g_covariance","text":"Plot covariance (correlation) matrix function lag time. covariance structure vectorized internally lag time distances computed can used visualization.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/g_covariance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of Covariance Matrix ‚Äî g_covariance","text":"","code":"g_covariance(   vcov_matrix,   time_prefix = NULL,   x_var = c(\"lag\", \"time_diff\"),   xlab = NULL,   ylab = \"\" )"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/g_covariance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of Covariance Matrix ‚Äî g_covariance","text":"vcov_matrix (matrix) symmetric covariance matrix identical row column names. time_prefix (string) string names vcov_matrix precedes time point value. x_var (string) can lag time_diff lag time difference, respectively. xlab (string NULL) x-axis label, NULL automatically determined x_var. ylab (string) y-axis label.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/g_covariance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualization of Covariance Matrix ‚Äî g_covariance","text":"ggplot object.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/g_covariance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualization of Covariance Matrix ‚Äî g_covariance","text":"default time_prefix value NULL, assumes names input matrix character string time point value. time_prefix specified, string appear front names vcov_matrix.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/g_covariance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of Covariance Matrix ‚Äî g_covariance","text":"","code":"vcov_matrix <- matrix(   c(49, 12, 12, 23),   nrow = 2, ncol = 2,   dimnames = list(     c(1, 2),     c(1, 2)   ) ) g_covariance(vcov_matrix, x_var = \"time_diff\")"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/g_mmrm_diagnostic.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnostic Plots for MMRM ‚Äî g_mmrm_diagnostic","title":"Diagnostic Plots for MMRM ‚Äî g_mmrm_diagnostic","text":"function produces diagnostic plots.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/g_mmrm_diagnostic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnostic Plots for MMRM ‚Äî g_mmrm_diagnostic","text":"","code":"g_mmrm_diagnostic(   object,   type = c(\"fit-residual\", \"q-q-residual\"),   z_threshold = NULL )"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/g_mmrm_diagnostic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagnostic Plots for MMRM ‚Äî g_mmrm_diagnostic","text":"object (tern_mmrm) model result produced fit_mmrm(). type (string) specifying type diagnostic plot produced: fit-residual: fitted vs residuals plot, grouped visits. allows see remaining structure residuals might captured adding additional covariates model. q-q-residual: Q-Q plot residuals (.e. sorted standardized residuals vs. normal quantiles), grouped visits. Observations absolute standardized residual z_threshold labeled. z_threshold (numeric) optional number indicating normal quantile threshold Q-Q plot.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/g_mmrm_diagnostic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diagnostic Plots for MMRM ‚Äî g_mmrm_diagnostic","text":"ggplot2 plot.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/g_mmrm_diagnostic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Diagnostic Plots for MMRM ‚Äî g_mmrm_diagnostic","text":"use marginal fitted values residuals. , estimate fitted values, difference fitted values vs. observed data residuals.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/g_mmrm_diagnostic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diagnostic Plots for MMRM ‚Äî g_mmrm_diagnostic","text":"","code":"mmrm_results <- fit_mmrm(   vars = list(     response = \"FEV1\",     covariates = c(\"RACE\", \"SEX\"),     id = \"USUBJID\",     arm = \"ARMCD\",     visit = \"AVISIT\"   ),   data = mmrm_test_data,   cor_struct = \"unstructured\",   weights_emmeans = \"equal\" ) g_mmrm_diagnostic(mmrm_results)  g_mmrm_diagnostic(mmrm_results, type = \"q-q-residual\")"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/g_mmrm_lsmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot LS means for MMRM ‚Äî g_mmrm_lsmeans","title":"Plot LS means for MMRM ‚Äî g_mmrm_lsmeans","text":"function summarizes adjusted lsmeans standard error, well conducts comparisons groups' adjusted lsmeans, first level group reference level.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/g_mmrm_lsmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot LS means for MMRM ‚Äî g_mmrm_lsmeans","text":"","code":"g_mmrm_lsmeans(   object,   select = c(\"estimates\", \"contrasts\"),   titles = c(estimates = paste(\"Adjusted mean of\", object$labels$response,     \"by treatment at visits\"), contrasts = paste0(\"Differences of \",     object$labels$response, \" adjusted means vs. control ('\", object$ref_level, \"')\")),   xlab = object$labels$visit,   ylab = paste0(\"Estimates with \", round(object$conf_level * 100), \"% CIs\"),   width = 0.6,   show_pval = TRUE,   show_lines = FALSE,   constant_baseline = NULL,   n_baseline = NA_integer_,   table_stats = character(),   table_formats = c(n = \"xx.\", estimate = \"xx.x\", se = \"xx.x\", ci = \"(xx.xx, xx.xx)\"),   table_labels = c(n = \"n\", estimate = \"LS mean\", se = \"Std. Error\", ci =     paste0(round(object$conf_level * 100), \"% CI\")),   table_font_size = 3,   table_rel_height = 0.5 )"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/g_mmrm_lsmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot LS means for MMRM ‚Äî g_mmrm_lsmeans","text":"object (tern_mmrm) model result produced fit_mmrm(). select (character) select one \"estimates\" \"contrasts\" plots. Note \"contrasts\" option applicable model summaries excluding arm variable. titles (character) elements estimates contrasts containing plot titles. xlab (string) x axis label. ylab (string) y axis label. width (numeric) width error bars. show_pval (flag) p-values differences LS means vs. control displayed (default)? show_lines (flag) visit estimates connected lines (default)? constant_baseline (named number NULL) optional constant baseline LS mean estimates. specified needs named number, name used label corresponding baseline visit. differences LS means always 0 baseline visit. n_baseline (int named integer) optional number patients baseline. Since can visible optional table estimates plot, infer object (since fit without baseline data), need allow user specify . number assumed constant across potential treatment arms, otherwise one number per treatment arm can provided. table_stats (character) names statistics displayed table estimates plot. Note table added selecting \"estimates\" plot. Available statistics n, estimate, se, ci. table_formats (named character) format patterns descriptive statistics used (optional) estimates table appended estimates plot. table_labels (named character) labels statistics (optional) estimates table. table_font_size (number) controls font size values (optional) estimates table. table_rel_height (number) controls relative height (optional) estimates table compared estimates plot.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/g_mmrm_lsmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot LS means for MMRM ‚Äî g_mmrm_lsmeans","text":"ggplot2 plot.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/g_mmrm_lsmeans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot LS means for MMRM ‚Äî g_mmrm_lsmeans","text":"variable labels available original data set, used. Otherwise variable names used annotating plot. contrast plot going returned treatment considered tern_mmrm object input, matter select argument contains contrasts value.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/g_mmrm_lsmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot LS means for MMRM ‚Äî g_mmrm_lsmeans","text":"","code":"library(dplyr)  mmrm_results <- fit_mmrm(   vars = list(     response = \"FEV1\",     covariates = c(\"RACE\", \"SEX\"),     id = \"USUBJID\",     arm = \"ARMCD\",     visit = \"AVISIT\"   ),   data = mmrm_test_data,   cor_struct = \"unstructured\",   weights_emmeans = \"equal\" ) g_mmrm_lsmeans(mmrm_results, constant_baseline = c(BSL = 0))  g_mmrm_lsmeans(   mmrm_results,   select = \"estimates\",   show_lines = TRUE,   xlab = \"Visit\" )  g_mmrm_lsmeans(   mmrm_results,   select = \"contrasts\",   titles = c(contrasts = \"Contrasts of FKSI-FWB means\"),   show_pval = TRUE,   show_lines = TRUE,   width = 0.8 )   mmrm_test_data2 <- mmrm_test_data %>%   filter(ARMCD == \"TRT\")  mmrm_results_no_arm <- fit_mmrm(   vars = list(     response = \"FEV1\",     covariates = c(\"RACE\", \"SEX\"),     id = \"USUBJID\",     visit = \"AVISIT\"   ),   data = mmrm_test_data2,   cor_struct = \"unstructured\",   weights_emmeans = \"equal\" )  g_mmrm_lsmeans(mmrm_results_no_arm, select = \"estimates\")  g_mmrm_lsmeans(   mmrm_results_no_arm,   select = c(\"estimates\", \"contrasts\"),   titles = c(     estimates = \"Adjusted mean of FKSI-FWB\",     contrasts = \"it will not be created\"   ),   show_pval = TRUE,   width = 0.8 )   g_mmrm_lsmeans(   mmrm_results_no_arm,   select = \"estimates\",   titles = c(estimates = \"Adjusted mean of FKSI-FWB\"),   show_pval = TRUE,   width = 0.8,   show_lines = TRUE ) #> `geom_line()`: Each group consists of only one observation. #> ‚Ñπ Do you need to adjust the group aesthetic?   g_mmrm_lsmeans(   mmrm_results,   select = \"estimates\",   titles = c(estimates = \"Adjusted mean of FKSI-FWB\"),   table_stats = c(\"n\", \"ci\") )"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/get_mmrm_lsmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Least Square Means from MMRM ‚Äî get_mmrm_lsmeans","title":"Extract Least Square Means from MMRM ‚Äî get_mmrm_lsmeans","text":"Extracts least square means MMRM fit.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/get_mmrm_lsmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Least Square Means from MMRM ‚Äî get_mmrm_lsmeans","text":"","code":"get_mmrm_lsmeans(fit, vars, conf_level, weights, averages = list())"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/get_mmrm_lsmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Least Square Means from MMRM ‚Äî get_mmrm_lsmeans","text":"fit (mmrm) result mmrm::mmrm(). vars (named list string character) specifying variables MMRM. following elements need included character vectors match corresponding columns data: response: response variable. covariates: additional covariate terms (might also include interactions). id: subject ID variable. arm: treatment group variable (factor). visit: visit variable (factor). weights: optional weights variable (NULL omitted weights used). Note main effects interaction arm visit default included model. conf_level (proportion) confidence level interval. weights (string) type weights used least square means, see emmeans::emmeans() details. averages (list) named list visit levels averaged reported along side single visits.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/get_mmrm_lsmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Least Square Means from MMRM ‚Äî get_mmrm_lsmeans","text":"list data frames estimates contrasts. attributes averages weights save settings used.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_assert_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Assertions for Datasets ‚Äî h_assert_data","title":"Assertions for Datasets ‚Äî h_assert_data","text":"provide assertion functions check input dataset.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_assert_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assertions for Datasets ‚Äî h_assert_data","text":"","code":"h_assert_one_rec_pt_visit(vars, data)  h_assert_rsp_var(vars, data)  h_assert_visit_var(vars, data)  h_assert_id_var(vars, data)  h_assert_weights_var(vars, data)  h_assert_data(vars, data)"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_assert_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assertions for Datasets ‚Äî h_assert_data","text":"vars (list) variables use. data (data.frame) data use.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_assert_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assertions for Datasets ‚Äî h_assert_data","text":"Nothing, fails error assertion hold.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_assert_data.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Assertions for Datasets ‚Äî h_assert_data","text":"h_assert_one_rec_pt_visit(): asserts single record per patient visit. h_assert_rsp_var(): assert numeric response variable. h_assert_visit_var(): assert factor visit variable. h_assert_id_var(): assert subject ID variable. h_assert_weights_var(): assert numeric weights variable. h_assert_data(): high-level assertion function check dataset.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_get_covariate_parts.html","id":null,"dir":"Reference","previous_headings":"","what":"Extraction of Covariate Parts from Character Vector ‚Äî h_get_covariate_parts","title":"Extraction of Covariate Parts from Character Vector ‚Äî h_get_covariate_parts","text":"Extraction Covariate Parts Character Vector","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_get_covariate_parts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extraction of Covariate Parts from Character Vector ‚Äî h_get_covariate_parts","text":"","code":"h_get_covariate_parts(covariates)"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_get_covariate_parts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extraction of Covariate Parts from Character Vector ‚Äî h_get_covariate_parts","text":"covariates (character) specification usual way, see examples.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_get_covariate_parts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extraction of Covariate Parts from Character Vector ‚Äî h_get_covariate_parts","text":"Character vector covariates involved covariates specification.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_get_diagnostics.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear Mixed Model Diagnostics ‚Äî h_get_diagnostics","title":"Linear Mixed Model Diagnostics ‚Äî h_get_diagnostics","text":"Compute model diagnostic statistics linear mixed model fit.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_get_diagnostics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear Mixed Model Diagnostics ‚Äî h_get_diagnostics","text":"","code":"h_get_diagnostics(fit)"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_get_diagnostics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear Mixed Model Diagnostics ‚Äî h_get_diagnostics","text":"fit (mmrm) object fit mmrm::mmrm().","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_get_diagnostics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear Mixed Model Diagnostics ‚Äî h_get_diagnostics","text":"list REML criterion, AIC, AICc BIC.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_get_timepoint_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Time points helper for Covariance Plot ‚Äî h_get_timepoint_vars","title":"Time points helper for Covariance Plot ‚Äî h_get_timepoint_vars","text":"Get inputted symmetric matrices row column labels numeric time points.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_get_timepoint_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time points helper for Covariance Plot ‚Äî h_get_timepoint_vars","text":"","code":"h_get_timepoint_vars(vcov_matrix, time_prefix = NULL)"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_get_timepoint_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time points helper for Covariance Plot ‚Äî h_get_timepoint_vars","text":"vcov_matrix (matrix) symmetric covariance matrix identical row column names. time_prefix (string) string names vcov_matrix precedes time point value.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_get_timepoint_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time points helper for Covariance Plot ‚Äî h_get_timepoint_vars","text":"function returns list two sets numbers: row_time col_time, identifying timepoints upper triangular part vcov_matrix.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_mmrm_subgroup_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for Extraction and Formatting of MMRM Subgroups ‚Äî h_mmrm_subgroup_df","title":"Helper for Extraction and Formatting of MMRM Subgroups ‚Äî h_mmrm_subgroup_df","text":"internal helper extract correct LS mean estimates contrast specific visit treatment arm relative reference arm one MMRM subgroup.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_mmrm_subgroup_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper for Extraction and Formatting of MMRM Subgroups ‚Äî h_mmrm_subgroup_df","text":"","code":"h_mmrm_subgroup_df(   lsmeans,   overall_fit,   is_in_subset,   visit,   treatment_arm,   subgroup,   var,   label )"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_mmrm_subgroup_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for Extraction and Formatting of MMRM Subgroups ‚Äî h_mmrm_subgroup_df","text":"lsmeans (named list NULL) LS mean estimates fit_mmrm() subgroup. overall_fit (tern_mmrm) result fit_mmrm() overall data. is_in_subset (logical) specifying row overall data used subset. visit (string) visit extract. treatment_arm (string) treatment arm extract. subgroup (string) labeling resulting data.frame. var (string) specifies variable used derive subset, means overall data used. label (string) variable label.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_mmrm_subgroup_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper for Extraction and Formatting of MMRM Subgroups ‚Äî h_mmrm_subgroup_df","text":"List estimates (2 rows) contrasts (1 row) format needed extract_mmrm_subgroups().","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_vectorization.html","id":null,"dir":"Reference","previous_headings":"","what":"Vectorization helper for Covariance Plot ‚Äî h_vectorization","title":"Vectorization helper for Covariance Plot ‚Äî h_vectorization","text":"function vectorizes upper-diagonal elements symmetric matrix (e.g. covariance matrix) obtains lag time distance pairs observations time values part names part matrix column row names.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_vectorization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vectorization helper for Covariance Plot ‚Äî h_vectorization","text":"","code":"h_vectorization(vcov_matrix, time_prefix = NULL)"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_vectorization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vectorization helper for Covariance Plot ‚Äî h_vectorization","text":"vcov_matrix (matrix) symmetric covariance matrix identical row column names. time_prefix (string) string names vcov_matrix precedes time point value.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/h_vectorization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vectorization helper for Covariance Plot ‚Äî h_vectorization","text":"data.frame upper-diagonal elements vcov_matrix. context repeated measures, matrix contains association pairs measurements taken different time points. contains following columns: Vect: upper-diagonal elements vcov_matrix. time_diff: difference column row times. lag: lag, defined difference column row ranks. rank_row: row rank. rank_col: column rank.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding Labels To Variables For Model ‚Äî labels","title":"Adding Labels To Variables For Model ‚Äî labels","text":"Adding Labels Variables Model","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding Labels To Variables For Model ‚Äî labels","text":"","code":"h_is_specified(x, vars)  h_is_specified_and_in_data(x, vars, data)  h_check_and_get_label(x, vars, data)  h_labels(vars, data)"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding Labels To Variables For Model ‚Äî labels","text":"x (character) element vars. vars (list) variables use. data (data.frame) data use.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/labels.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Adding Labels To Variables For Model ‚Äî labels","text":"h_is_specified(): checks element vars NULL empty. h_is_specified_and_in_data(): checks element vars NULL exists dataset. h_check_and_get_label(): gets label element vars. h_labels(): returns list variables labels.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/lsmeans_helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"Helpers for Processing Least Square Means ‚Äî lsmeans_helpers","title":"Helpers for Processing Least Square Means ‚Äî lsmeans_helpers","text":"Helpers Processing Least Square Means","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/lsmeans_helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helpers for Processing Least Square Means ‚Äî lsmeans_helpers","text":"","code":"h_get_emmeans_res(fit, vars, weights)  h_get_average_visit_specs(emmeans_res, vars, averages, fit)  h_get_spec_visit_estimates(emmeans_res, specs, conf_level, tests = FALSE)  h_get_single_visit_estimates(emmeans_res, conf_level)  h_get_relative_reduc_df(estimates, vars)  h_single_visit_contrast_specs(emmeans_res, vars)  h_average_visit_contrast_specs(specs, averages)"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/lsmeans_helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helpers for Processing Least Square Means ‚Äî lsmeans_helpers","text":"fit result mmrm::mmrm(). vars (named list string character) specifying variables MMRM. following elements need included character vectors match corresponding columns data: response: response variable. covariates: additional covariate terms (might also include interactions). id: subject ID variable. arm: treatment group variable (factor). visit: visit variable (factor). weights: optional weights variable (NULL omitted weights used). Note main effects interaction arm visit default included model. weights (string) argument emmeans::emmeans(), \"proportional\" default. emmeans_res (list) initial emmeans result h_get_emmeans_res(). averages (list) optional named list visit levels averaged reported along side single visits. specs (list) list least square means specifications, elements coefs (coefficient list) grid (corresponding data.frame). conf_level (proportion) confidence level interval. tests (flag) whether add test results estimates. estimates (data.frame) single visit least square mean estimates.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/lsmeans_helpers.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Helpers for Processing Least Square Means ‚Äî lsmeans_helpers","text":"h_get_emmeans_res(): returns list object (emmGrid object containing emmeans results) grid (data.frame containing potential arm visit variables together sample size n combination). h_get_average_visit_specs(): constructs average visits specifications. h_get_spec_visit_estimates(): estimates least square means data.frame given specifications. h_get_single_visit_estimates(): estimates least square means single visits. h_get_relative_reduc_df(): constructs data.frame relative reduction vs. reference arm based single visit estimates. h_single_visit_contrast_specs(): constructs single visit contrast specifications. h_average_visit_contrast_specs(): constructs average visits contrast specifications, given specs single visit contrasts averages required.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/mmrm_test_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example dataset for tern.mmrm package. ‚Äî mmrm_test_data","title":"Example dataset for tern.mmrm package. ‚Äî mmrm_test_data","text":"Measurements FEV1 (forced expired volume one second) measure quickly lungs can emptied. Low levels FEV1 may indicate chronic obstructive pulmonary disease (COPD).","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/mmrm_test_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example dataset for tern.mmrm package. ‚Äî mmrm_test_data","text":"","code":"mmrm_test_data"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/mmrm_test_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example dataset for tern.mmrm package. ‚Äî mmrm_test_data","text":"tibble 800 rows 7 variables: USUBJID: unique subject identifier. AVISIT: visit number. ARMCD: treatment, TRT PBO. RACE: 3-category race. SEX: sex. FEV1_BL: FEV1 baseline (%). FEV1: FEV1 study visits.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages ‚Äî reexports","title":"Objects exported from other packages ‚Äî reexports","text":"objects imported packages. Follow links see documentation. generics tidy tern .rtable","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/tabulate_mmrm.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabulation of MMRM Results ‚Äî tabulate_mmrm","title":"Tabulation of MMRM Results ‚Äî tabulate_mmrm","text":"functions can used produce tables fitted MMRM produced fit_mmrm().","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/tabulate_mmrm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabulation of MMRM Results ‚Äî tabulate_mmrm","text":"","code":"# S3 method for tern_mmrm as.rtable(x, type = c(\"fixed\", \"cov\", \"diagnostic\"), ...)  h_mmrm_fixed(x, format = \"xx.xxxx\")  h_mmrm_cov(x, format = \"xx.xxxx\")  h_mmrm_diagnostic(x, format = \"xx.xxxx\")  # S3 method for tern_mmrm tidy(x, ...)  s_mmrm_lsmeans(df, .in_ref_col, show_relative = c(\"reduction\", \"increase\"))  a_mmrm_lsmeans(df, .in_ref_col, show_relative = c(\"reduction\", \"increase\"))  s_mmrm_lsmeans_single(df)  a_mmrm_lsmeans_single(df)  summarize_lsmeans(   lyt,   arms = TRUE,   ...,   table_names = \"lsmeans_summary\",   .stats = NULL,   .formats = NULL,   .indent_mods = NULL,   .labels = NULL )"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/tabulate_mmrm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabulation of MMRM Results ‚Äî tabulate_mmrm","text":"x (tern_mmrm) original result fit_mmrm(). type (string) type table returned. ... additional argument format controlling numeric format. format (string) format numbers table. df (data frame) data set containing analysis variables. .in_ref_col (logical)TRUE working reference level, FALSE otherwise. show_relative \"reduction\" (control - treatment, default) \"increase\" (treatment - control) shown relative change baseline? lyt (layout) input layout analyses added . arms (flag)  treatment variable considered using summarize_lsmeans layout generating function. table_names (character) can customized case vars analyzed multiple times, avoid warnings rtables. .stats (character) statistics select table. .formats (named character list) formats statistics. .indent_mods (named integer) indent modifiers labels. .labels (named character) labels statistics (without indent).","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/tabulate_mmrm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabulation of MMRM Results ‚Äî tabulate_mmrm","text":".rtable.tern_mmrm() returns fixed effects, covariance estimate diagnostic statistics tables.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/tabulate_mmrm.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Tabulation of MMRM Results ‚Äî tabulate_mmrm","text":".rtable(tern_mmrm): Produce simple MMRM tables via generic .rtable(). h_mmrm_fixed(): Helper function produce fixed effects table. h_mmrm_cov(): Helper function produce covariance matrix table. h_mmrm_diagnostic(): Helper function produce diagnostic statistics table. tidy(tern_mmrm): Helper method (broom::tidy()) prepare data.frame tern_mmrm object containing least-squares means contrasts. s_mmrm_lsmeans(): Statistics function extracting estimates tidied least-squares means data frame. a_mmrm_lsmeans(): Formatted Analysis function can customized calling rtables::make_afun() . used afun rtables::analyze(). s_mmrm_lsmeans_single(): Statistics function extracting estimates tidied least-squares means data frame ARM considered model. a_mmrm_lsmeans_single(): Formatted Analysis function (ARM considered model) can customized calling rtables::make_afun() . used afun rtables::analyze(). summarize_lsmeans(): Analyze function tabulating least-squares means estimates tidied mmrm results.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/tabulate_mmrm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tabulation of MMRM Results ‚Äî tabulate_mmrm","text":"","code":"result <- fit_mmrm(   vars = list(     response = \"FEV1\",     covariates = c(\"RACE\", \"SEX\"),     id = \"USUBJID\",     arm = \"ARMCD\",     visit = \"AVISIT\"   ),   data = mmrm_test_data,   cor_struct = \"unstructured\",   weights_emmeans = \"equal\" ) as.rtable(result, type = \"cov\", format = \"xx.x\") #>        VIS1   VIS2   VIS3   VIS4 #> ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî #> VIS1   40.6   14.4   5.0    13.4 #> VIS2   14.4   26.6   2.8    7.5  #> VIS3   5.0    2.8    14.9   0.9  #> VIS4   13.4   7.5    0.9    95.6  result_no_arm <- fit_mmrm(   vars = list(     response = \"FEV1\",     covariates = c(\"RACE\", \"SEX\"),     id = \"USUBJID\",     visit = \"AVISIT\"   ),   data = mmrm_test_data,   cor_struct = \"unstructured\",   weights_emmeans = \"equal\" ) as.rtable(result_no_arm, type = \"cov\", format = \"xx.x\") #>        VIS1   VIS2   VIS3   VIS4 #> ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî #> VIS1   43.3   17.8   7.3    18.1 #> VIS2   17.8   30.4   6.0    10.7 #> VIS3   7.3    6.0    17.0   5.0  #> VIS4   18.1   10.7   5.0    98.9 df <- broom::tidy(result) df_no_arm <- broom::tidy(result_no_arm) s_mmrm_lsmeans(df[8, ], .in_ref_col = FALSE) #> $n #> [1] 67 #>  #> $adj_mean_se #> [1] 52.78422  1.18776 #>  #> $adj_mean_ci #> [1] 50.43481 55.13362 #> attr(,\"label\") #> [1] \"95% CI\" #>  #> $diff_mean_se #> [1] 4.398457 1.680545 #>  #> $diff_mean_ci #> [1] 1.074493 7.722422 #> attr(,\"label\") #> [1] \"95% CI\" #>  #> $change #> [1] -0.09090396 #> attr(,\"label\") #> [1] \"Relative Reduction (%)\" #>  #> $p_value #> [1] 0.009886854 #>  s_mmrm_lsmeans_single(df_no_arm[4, ]) #> $n #> [1] 134 #>  #> $adj_mean_se #> [1] 50.6510864  0.8508787 #>  #> $adj_mean_ci #> [1] 48.96834 52.33383 #> attr(,\"label\") #> [1] \"95% CI\" #>  library(dplyr)  dat_adsl <- mmrm_test_data %>%   select(USUBJID, ARMCD) %>%   unique() basic_table() %>%   split_cols_by(\"ARMCD\", ref_group = result$ref_level) %>%   add_colcounts() %>%   split_rows_by(\"AVISIT\") %>%   summarize_lsmeans(     .stats = c(\"n\", \"adj_mean_se\", \"adj_mean_ci\", \"diff_mean_se\", \"diff_mean_ci\"),     .labels = c(adj_mean_se = \"Adj. LS Mean (Std. Error)\"),     .formats = c(adj_mean_se = sprintf_format(\"%.1f (%.2f)\"))   ) %>%   build_table(     df = broom::tidy(result),     alt_counts_df = dat_adsl   ) #>                                             PBO                TRT        #>                                           (N=105)             (N=95)      #> ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî #> VIS1                                                                      #>   n                                          68                 66        #>   Adj. LS Mean (Std. Error)             33.3 (0.76)        37.1 (0.76)    #>   95% CI                              (31.839, 34.825)   (35.599, 38.613) #>   Difference in Adjusted Means (SE)                       3.774 (1.074)   #>   95% CI                                                  (1.651, 5.897)  #> VIS2                                                                      #>   n                                          69                 71        #>   Adj. LS Mean (Std. Error)             38.2 (0.61)        41.9 (0.60)    #>   95% CI                              (36.963, 39.380)   (40.713, 43.094) #>   Difference in Adjusted Means (SE)                       3.732 (0.859)   #>   95% CI                                                  (2.035, 5.430)  #> VIS3                                                                      #>   n                                          71                 58        #>   Adj. LS Mean (Std. Error)             43.7 (0.46)        46.8 (0.51)    #>   95% CI                              (42.760, 44.588)   (45.748, 47.761) #>   Difference in Adjusted Means (SE)                       3.081 (0.690)   #>   95% CI                                                  (1.716, 4.445)  #> VIS4                                                                      #>   n                                          67                 67        #>   Adj. LS Mean (Std. Error)             48.4 (1.19)        52.8 (1.19)    #>   95% CI                              (46.035, 50.737)   (50.435, 55.134) #>   Difference in Adjusted Means (SE)                       4.398 (1.681)   #>   95% CI                                                  (1.074, 7.722)   basic_table() %>%   split_rows_by(\"AVISIT\") %>%   summarize_lsmeans(arms = FALSE) %>%   build_table(     df = broom::tidy(result_no_arm),     alt_counts_df = dat_adsl   ) #>                            all obs      #> ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî #> VIS1                                    #>   n                          134        #>   Adjusted Mean (SE)    35.191 (0.550)  #>     95% CI             (34.105, 36.277) #> VIS2                                    #>   n                          140        #>   Adjusted Mean (SE)    40.039 (0.455)  #>     95% CI             (39.140, 40.938) #> VIS3                                    #>   n                          129        #>   Adjusted Mean (SE)    45.029 (0.361)  #>     95% CI             (44.314, 45.744) #> VIS4                                    #>   n                          134        #>   Adjusted Mean (SE)    50.651 (0.851)  #>     95% CI             (48.968, 52.334)"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/tabulate_mmrm_subgroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabulation of MMRM Subgroups Results ‚Äî tabulate_mmrm_subgroups","title":"Tabulation of MMRM Subgroups Results ‚Äî tabulate_mmrm_subgroups","text":"function tabulates results extract_mmrm_subgroups().","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/tabulate_mmrm_subgroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabulation of MMRM Subgroups Results ‚Äî tabulate_mmrm_subgroups","text":"","code":"tabulate_mmrm_subgroups(   lyt,   df,   vars = c(\"n_tot\", \"n\", \"lsmean\", \"diff\", \"ci\"),   .formats = list(n = \"xx\", n_tot = \"xx\", lsmean = \"xx.x\", diff = \"xx.x\", ci =     \"(xx.x, xx.x)\", pval = \"x.xxxx | (<0.0001)\"),   .labels = list(n = \"n\", n_tot = \"Total n\", lsmean = \"Mean\", diff = \"Mean Difference\",     ci = paste0(round(100 * df$contrasts$conf_level[1]), \"% CI\"), pval = \"p-value\") )"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/tabulate_mmrm_subgroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabulation of MMRM Subgroups Results ‚Äî tabulate_mmrm_subgroups","text":"lyt (layout) input layout analyses added . df (list) data frames containing analysis variables, result extract_mmrm_subgroups(). vars (character) name statistics reported among n_tot (total number patients per group), n (number patients per treatment arm group), lsmean (least square mean point estimate), diff (difference least square mean estimates treatment reference arm), ci (confidence interval difference) pval (p value diff, adjusted multiple comparisons). Note, statistics n_tot, diff ci required. .formats (named list) containing formats statistics. .labels (named list) containing labels statistics.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/tabulate_mmrm_subgroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabulation of MMRM Subgroups Results ‚Äî tabulate_mmrm_subgroups","text":"rtables object.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/tabulate_mmrm_subgroups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tabulation of MMRM Subgroups Results ‚Äî tabulate_mmrm_subgroups","text":"","code":"mmrm_results <- fit_mmrm(   vars = list(     response = \"FEV1\",     covariates = \"RACE\",     id = \"USUBJID\",     arm = \"ARMCD\",     visit = \"AVISIT\"   ),   data = mmrm_test_data,   cor_struct = \"compound symmetry\",   weights_emmeans = \"equal\",   averages_emmeans = list(     \"VIS1+2\" = c(\"VIS1\", \"VIS2\")   ) )  df <- extract_mmrm_subgroups(   fit = mmrm_results,   visit = \"VIS3\",   subgroups = c(\"RACE\", \"SEX\") )  ## Table with default columns. basic_table() %>%   tabulate_mmrm_subgroups(df) #>                                            PBO         TRT                                    #> Baseline Risk Factors         Total n   n    Mean   n    Mean   Mean Difference     95% CI    #> ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî #> All Patients                    129     71   43.7   58   46.5         2.8         (0.5, 5.2)  #> RACE                                                                                          #>   Asian                         51      27   41.4   24   43.8         2.4         (-1.2, 6.0) #>   Black or African American     42      29   42.6   13   46.1         3.5         (-0.8, 7.9) #>   White                         36      15   47.0   21   50.0         3.0         (-1.5, 7.5) #> SEX                                                                                           #>   Male                          58      35   43.0   23   46.7         3.7         (0.2, 7.2)  #>   Female                        71      36   44.2   35   46.4         2.2         (-1.0, 5.3)  ## Table with selected columns. tab <- basic_table() %>%   tabulate_mmrm_subgroups(     df = df,     vars = c(\"n_tot\", \"diff\", \"ci\", \"pval\")   ) tab #> Baseline Risk Factors         Total n   Mean Difference     95% CI      p-value #> ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî #> All Patients                    129           2.8         (0.5, 5.2)    0.0162  #> RACE                                                                            #>   Asian                         51            2.4         (-1.2, 6.0)   0.1853  #>   Black or African American     42            3.5         (-0.8, 7.9)   0.1085  #>   White                         36            3.0         (-1.5, 7.5)   0.1920  #> SEX                                                                             #>   Male                          58            3.7         (0.2, 7.2)    0.0370  #>   Female                        71            2.2         (-1.0, 5.3)   0.1753   ## Forest plot can be produced based on this very easily. g_forest(tab, logx = FALSE, xlim = c(-10, 10), x_at = c(-10, -5, 0, 5, 10), vline = 0)"},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/tern.mmrm-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tern.mmrm Package ‚Äî tern.mmrm-package","title":"tern.mmrm Package ‚Äî tern.mmrm-package","text":"tern.mmrm analysis package create tables, listings graphs analyze clinical trials data.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/tern.mmrm/reference/tern.mmrm-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tern.mmrm Package ‚Äî tern.mmrm-package","text":"Maintainer: Daniel Saban√©s Bov√© daniel.sabanes_bove@roche.com Authors: Godwin Yung yungg@gene.com Francois Collin Julia Dedic julia.dedic@roche.com Jana Stoilova jana.stoilova@roche.com Joe Zhu joe.zhu@roche.com contributors: F. Hoffmann-La Roche AG [copyright holder, funder]","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/tern.mmrm/news/index.html","id":"ternmmrm-0309001","dir":"Changelog","previous_headings":"","what":"tern.mmrm 0.3.0.9001","title":"tern.mmrm 0.3.0.9001","text":"Adapt release 0.3 mmrm package.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/news/index.html","id":"new-features-0-3-0-9001","dir":"Changelog","previous_headings":"","what":"New features","title":"tern.mmrm 0.3.0.9001","text":"additional arguments can passed now via ... mmrm::mmrm calling fit_mmrm. particular, method argument allows choose Kenward-Roger adjustment degrees freedom coefficients covariance matrix.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/news/index.html","id":"breaking-changes-0-3-0-9001","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"tern.mmrm 0.3.0.9001","text":"optimizer interface different now: choosing automatically right optimizer, just omit optimizer argument calling fit_mmrm.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/news/index.html","id":"miscellaneous-0-3-0-9001","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"tern.mmrm 0.3.0.9001","text":"parallelly now used internally handle determination available cores.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/tern.mmrm/news/index.html","id":"breaking-changes-0-2-1","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"tern.mmrm 0.2.1","text":"Completed refactoring computations use new mmrm package instead lme4 lmerTest. greatly increases convergence speed. Different covariance structures optimizers now available compared .","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/news/index.html","id":"new-features-0-2-1","dir":"Changelog","previous_headings":"","what":"New features","title":"tern.mmrm 0.2.1","text":"Added function g_covariance() visualize covariance matrix, can helpful choosing visualizing covariance structure MMRM. Added option averages_emmeans fit_mmrm() allows estimation least square means averages visits. Added weights option fitting MMRMs.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/news/index.html","id":"enhancements-0-2-1","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"tern.mmrm 0.2.1","text":"Added option accept_singular fit_mmrm() allows estimation rank-deficient models (like lm() gls()) omitting columns singular coefficients design matrix. Added options show_lines xlab g_mmrm_lsmeans() allow addition lines connecting estimates, well custom x-axis label. Added options table_stats, table_formats, table_labels, table_font_size, table_rel_height g_mmrm_lsmeans() allow addition configure appearance LS means estimates statistics table LS means estimates plot. Added options constant_baseline n_baseline g_mmrm_lsmeans() allow plotting constant baseline value specifying corresponding number patients (visible optional table) LS means plots.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/tern.mmrm/news/index.html","id":"miscellaneous-0-1-1","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"tern.mmrm 0.1.1","text":"Removed dependency purrr, tibble, scda scda.2022 Changed tests example apps use mmrm_test_data sample data. Updated license. Updated package authors.","code":""},{"path":"https://insightsengineering.github.io/tern.mmrm/news/index.html","id":"ternmmrm-010","dir":"Changelog","previous_headings":"","what":"tern.mmrm 0.1.0","title":"tern.mmrm 0.1.0","text":"Starting separate package moving MMRM functionality tern.","code":""}]
